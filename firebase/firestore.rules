rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Default rule - deny access
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Users collection
    match /users/{userId} {
      // Allow users to read and write their own data
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow reading user profiles for other authenticated users
      allow read: if request.auth != null;
    }
    
    // Cities chat collection
    match /chat_cities/{cityId} {
      // Anyone authenticated can read city info
      allow read: if request.auth != null;
      // Only admins can create/update/delete cities
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Chat messages collection
    match /chat_messages/{messageId} {
      // Anyone authenticated can read messages
      allow read: if request.auth != null;
      
      // Users can create their own messages
      allow create: if request.auth != null && 
                     request.resource.data.userId == request.auth.uid;
      
      // Users can only update/delete their own messages
      allow update, delete: if request.auth != null && 
                             resource.data.userId == request.auth.uid;
    }
    
    // Event chats collection
    match /event_chats/{eventId} {
      // Anyone authenticated can read event chat info
      allow read: if request.auth != null;
      // Only admins can create/update/delete event chats
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Events collection
    match /events/{eventId} {
      // Anyone can read events
      allow read: if true;
      // Only admins can create/update/delete events
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Tickets collection
    match /tickets/{ticketId} {
      // Users can read their own tickets
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      // Users can create tickets
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Only admins can update/delete tickets
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
} 